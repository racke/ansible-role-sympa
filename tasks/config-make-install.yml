---
# Copyright (C) 2020-2021 Stefan Hornburg (Racke) <racke@linuxia.de>
# SPDX-License-Identifier: GPL-2.0-or-later

- name: Ensure that installation directory exists
  file:
    state: directory
    path: "{{ sympa_installation_directory }}"
    owner: "{{ sympa_unix_user }}"
    group: "{{ sympa_unix_group }}"
    mode: 0755

- name: Ensure that configuration directory exists
  file:
    state: directory
    path: "{{ sympa_configuration_directory }}"
    owner: "{{ sympa_unix_user }}"
    group: "{{ sympa_unix_group }}"
    mode: 0755

- name: Install stuff we need for compiling
  package:
    name:
      - gcc
      - "{{ sympa_make_package }}"
      - autoconf
      - automake
      - "{% if ansible_os_family == 'Suse' %}gettext-tools{% elif ansible_os_family == 'RedHat' %}gettext-devel{% elif ansible_os_family == 'Alpine' %}gettext-dev{% else %}gettext{% endif %}"

- name: Run autoconf
  command: autoreconf -i
  args:
    chdir: "{{ sympa_source_directory }}"
  become_user: "{{ sympa_unix_user }}"
  vars:
    ansible_ssh_pipelining: true
  when: sympa_installation_method != 'source' or sympa_source_patches | count

- name: Add symlink for pod2man on Arch Linux
  file:
    state: link
    src: "/usr/bin/core_perl/pod2man"
    dest: "/usr/local/bin/pod2man"
  become: true
  when: ansible_os_family == 'Archlinux'

- name: Configure Sympa
  command: |
    ./configure --prefix="{{ sympa_installation_directory }}"
    --with-lockdir={% if ansible_os_family == 'FreeBSD' %}/var/spool/lock{%else %}/var/lock{% endif %}
    {% if ansible_os_family != 'FreeBSD' %} --without-initdir{% else %} --with-initdir=/etc/rc.d{% endif %}
    {% if not sympa_build_options.setuid_fcgi %} --disable-setuid_fcgi
    {% endif %}
    {% if not sympa_build_options.setuid_queue %} --disable-setuid_queue
    {% endif %}
    --without-smrshdir
  args:
    chdir: "{{ sympa_source_directory }}"
  become_user: "{{ sympa_unix_user }}"
  vars:
    ansible_ssh_pipelining: true

- name: Make Sympa
  command: make
  args:
    chdir: "{{ sympa_source_directory }}"
  become_user: "{{ sympa_unix_user }}"
  vars:
    ansible_ssh_pipelining: true

- name: Install Sympa
  command: make install
  args:
    chdir: "{{ sympa_source_directory }}"
  become_user: "{{ sympa_unix_user }}"
  vars:
    ansible_ssh_pipelining: true
  notify:
    - restart sympa
    - restart wwsympa
    - restart sympasoap

- name: Set variable for Sympa command
  set_fact:
    sympa_command: "{{ sympa_installation_directory }}/bin/sympa.pl"

- name: Ensure that /usr/local/bin exists (CentOS 8)
  file:
    state: directory
    path: /usr/local/bin
    owner: root
    group: root
    mode: '755'
  when:
    - ansible_distribution == 'CentOS'
    - ansible_distribution_major_version|int == 8

- name: Install alias for Sympa command
  file:
    state: link
    src: "{{ sympa_command }}"
    dest: /usr/local/bin/sympa
  become: true
