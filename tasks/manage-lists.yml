---
# Copyright (C) 2020-2021 Stefan Hornburg (Racke) <racke@linuxia.de>
# SPDX-License-Identifier: GPL-2.0-or-later

- name: Query information about the Sympa user
  getent:
    database: passwd
    key: "{{ sympa_unix_user }}"
    split: ":"
  register: sympa_user_info

- name: Determine home directory of the Sympa user
  set_fact:
    sympa_unix_user_home: "{{ getent_passwd[sympa_unix_user][4] }}"

- name: Save XML as file
  copy:
    content: |
      <?xml version="1.0" encoding="utf-8"?>
      <list>
        {% if 'robot' in item %}<robot>{{ item.robot }}</robot>{% endif %}
        <owner multiple="1">
          <email>{{ item.owner }}</email>
        </owner>
        <description>Quis eos dolorem iusto sint et sequi eveniet rerum. Unde eum laborum facere tenetur. Saepe aliquid similique harum temporibus. Et fugiat aspernatur praesentium et animi ducimus exercitationem. Explicabo alias sit non omnis voluptatum expedita.
        Nesciunt nemo sed eum. Ipsam et repudiandae inventore reprehenderit. Iure nihil nulla officia et laboriosam voluptatem. Non veritatis labore culpa provident odit. Qui quis sed et cum dolorum ratione. Possimus blanditiis velit a reprehenderit ducimus itaque numquam.
        Ut et sed neque quis in ducimus. Beatae nesciunt ipsam cupiditate. Quas vel dicta porro id voluptate aut minima. Modi ea deleniti quam quasi error. Quia exercitationem et architecto fuga fuga. Et odio sunt praesentium.</description>
        <status>open</status>
        <topics>{{ item.topics | default('computing/network') }}</topics>
        <subject>{{ item.subject }}</subject>
        <type>{{ item.type }}</type>
        <listname>{{ item.name }}</listname>
      </list>
    dest: "{{ sympa_unix_user_home }}/{{ item.name }}.xml"
    mode: 0644
  with_items: "{{ sympa_lists }}"

- name: Add list
  command: |-
    {{ sympa_command }} --create_list {% if 'robot' in item %}--robot={{ item.robot }}{% endif %} --input_file={{ sympa_unix_user_home }}/{{ item.name }}.xml
  with_items: "{{ sympa_lists }}"
  become_user: "{{ sympa_unix_user }}"
  vars:
    ansible_ssh_pipelining: true
  register: sympa_add_list_result
  failed_when:
    (sympa_add_list_result.rc == 1 and sympa_add_list_result.stderr |  default('') is not search('list already exists|existiert bereits')) or sympa_add_list_result.rc > 1
